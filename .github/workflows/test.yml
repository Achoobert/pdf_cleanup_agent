name: Run Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create test data directories
      run: |
        mkdir -p data/txt_input
        mkdir -p data/output
        mkdir -p data/pdf
        mkdir -p data/markdown
    
    - name: Create test files
      run: |
        echo "Test input text for processing." > data/txt_input/input.txt
        echo "Clean up this text:" > prompt.txt
    
    - name: Run tests
      run: |
        python run_tests.py
    
    - name: Run individual test modules
      run: |
        python -m unittest tests.test_agent -v
        python -m unittest tests.test_agent_stream -v
        python -m unittest tests.test_hello_world -v
    
    - name: Test import statements
      run: |
        python -c "import agent; print('✅ agent module imports successfully')"
        python -c "import agent_stream; print('✅ agent_stream module imports successfully')"
        python -c "import hello_world; print('✅ hello_world module imports successfully')"
    
    - name: Check code style
      run: |
        python -m py_compile agent.py
        python -m py_compile agent_stream.py
        python -m py_compile hello_world.py
        python -m py_compile run_tests.py
        echo "✅ All Python files compile successfully" 